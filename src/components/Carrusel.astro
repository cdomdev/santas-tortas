---
import { items } from "@/content";
---

<section
  class="carousel h-dvh w-screen overflow-hidden relative z-10 rounded-none bg-[#f3ebe2]"
>
  <article class="list-wrapper relative h-full overflow-hidden">
    <div class="list flex transition-transform duration-500">
      {
        items.map((item) => (
          <div class="item flex-none w-full h-full absolute inset-0">
            <img
              src={item.image}
              alt="imagen de producto"
              class="absolute top-2/4 left-1/2 md:top-1/4 lg:top-[30%] lg:left-[55%] z-20 w-40 md:w-72"
            />
         
            <div class="content absolute top-24 md:top-52 lg:top-1/4 w-full md:w-2/5 -right-10 md:right-1/2 p-5 ml-1 md:m-0 md:p-7 -translate-x-10 md:-translate-x-12 box-border text-black bg-white">
              <div class="tittle font-bold tracking-tight text-2xl md:text-3xl lg:text-5xl mt-2 uppercase text-[#f1683a] text-balance">
                {item.title}
              </div>
              <div class="des text-sm md:text-base my-3 md:my-4 lg:my-5 text-balance">
                {item.text}
              </div>
              <a
                id="buttons"
                href="/personalizados/form-datos-personalizado"
                class="font-medium text-xs md:text-base px-3 py-2 block text-center w-full bg-white border text-black border-black hover:bg-[#f1683a] hover:text-white duration-200"
              >
                Hacer mi pedido
              </a>
            </div>
          </div>
        ))
      }
    </div>
  </article>

  <article
    class="thumbnail absolute bottom-16 md:bottom-20 left-11 md:left-20 lg:left-2/4 w-max z-10 flex gap-2 md:gap-4"
  >
    {
      items.slice(1, 5).map((item) => (
        <a
          href={item.thumbnail?.url}
          class="item w-28 h-36 md:w-40 md:h-48 flex-shrink-0 relative border rounded-2xl overflow-hidden bg-[url('/carrusel/bg-thumnails.png')] bg-cover bg-center shadow-lg"
        >
          <img
            src={item.thumbnail?.image}
            alt="image-carrusel-thumbnail"
            loading="lazy"
            class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 object-cover rounded-2xl z-10"
          />
        </a>
      ))
    }
  </article>

  <!-- controls -->

  <article
    class="arrows absolute top-[50%] md:top-[62%] lg:top-[70%] right-2/3 z-10 w-80 justify-center flex gap-3 max-w-[30%] p-5 items-center my-7"
  >
    <button
      id="prev"
      type="button"
      class="grid place-content-center size-8 md:size-14 text-black rounded-full border-none bg-[#8f8e8e] font-bold transition duration-150 hover:bg-white hover:text-black"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        width="24"
        class="size-4 md:size-8"
        height="24"
        stroke-width="2"
      >
        <path d="M15 6l-6 6l6 6"></path>
      </svg>
      <span class="sr-only">Previous</span>
    </button>
    <button
      type="button"
      id="next"
      class="grid place-content-center size-8 md:size-14 rounded-full border-none bg-[#8f8e8e] text-black font-bold transition duration-150 hover:bg-white hover:text-black"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        width="24"
        class="size-4 md:size-8"
        height="24"
        stroke-width="2"
      >
        <path d="M9 6l6 6l-6 6"></path>
      </svg>
      <span class="sr-only">Next</span>
    </button>
  </article>
</section>

<style>
  .carousel .list {
    display: flex;
    flex-direction: row;
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    transition: transform 0.5s ease-in-out;
  }

  .carousel .list .item {
    flex-shrink: 0;
    width: 100%;
    position: relative;
  }

  /* animation */
  .carousel .list .item:nth-child(1) {
    z-index: 1;
  }
  /* Asegura que la imagen del producto esté siempre arriba */
  .carousel .list .item img:first-child {
    z-index: 30 !important;
  }

  .carousel .list .item img:last-child {
    z-index: 10;
  }

  .carousel .list .item.moving img:first-child {
    /* Durante la transición, lo baja temporalmente */
    z-index: 5 !important;
  }

  .carousel .list .item.moving img:last-child {
    z-index: 2;
  }

  /* animation text in first item */

  .carousel .list .item:nth-child(1) .content .tittle,
  .carousel .list .item:nth-child(1) .content .tittle,
  .carousel .list .item:nth-child(1) .content .des,
  .carousel .list .item:nth-child(1) .content #buttons {
    transform: translateY(50px);
    filter: blur(20px);
    opacity: 0;
    animation: showContent 0.5s 1s linear 1 forwards;
  }
  @keyframes showContent {
    to {
      transform: translateY(0px);
      filter: blur(0px);
      opacity: 1;
    }
  }

  .carousel .list .item img {
    transition:
      filter 0.5s ease,
      opacity 0.5s ease;
    filter: blur(20px);
    opacity: 0;
  }

  .carousel .list .item.active img {
    filter: blur(0px);
    opacity: 1;
  }

  .carousel .list .item.exiting img {
    filter: blur(20px);
    opacity: 0;
  }

  .carousel.next .thumbnail .item:nth-last-child(1) {
    overflow: hidden;
    animation: showThumbnail 0.5s linear 1 forwards;
  }
  .carousel.prev .list .item img {
    z-index: 10;
  }
  @keyframes showThumbnail {
    from {
      width: 0;
      opacity: 0;
    }
  }
  .carousel.next .thumbnail {
    animation: effectNext 0.5s linear 1 forwards;
  }

  @keyframes effectNext {
    from {
      transform: translateX(150px);
    }
  }

  /* prev click */

  .carousel.prev .list .item:nth-child(2) {
    z-index: 2;
  }

  .carousel.prev .list .item:nth-child(2) img {
    animation: outFrame 0.5s linear 1 forwards;
    position: absolute;
    bottom: 0;
    left: 0;
  }
  @keyframes outFrame {
    to {
      width: 150px;
      height: 220px;
      bottom: 50px;
      left: 50%;
      border-radius: 20px;
    }
  }

  .carousel.prev .thumbnail .item:nth-child(1) {
    overflow: hidden;
    opacity: 0;
    animation: showThumbnail 0.5s linear 1 forwards;
  }
  .carousel.next .arrows button,
  .carousel.prev .arrows button {
    pointer-events: none;
  }
  .carousel.prev .list .item:nth-child(2) .content .tittle,
  .carousel.prev .list .item:nth-child(2) .content .tittle,
  .carousel.prev .list .item:nth-child(2) .content .des,
  .carousel.prev .list .item:nth-child(2) .content .buttons {
    animation: contentOut 1.5s linear 1 forwards !important;
  }

  @keyframes contentOut {
    to {
      transform: translateY(-150px);
      filter: blur(20px);
      opacity: 0;
    }
  }
</style>

<script>
  if (typeof window !== "undefined") {
    const nextDom = document.getElementById("next");
    const prevDom = document.getElementById("prev");

    const carouselDom = document.querySelector(".carousel");
    const SliderDom = carouselDom?.querySelector(".list");
    const thumbnailBorderDom = carouselDom?.querySelector(".thumbnail");
    const thumbnailItemsDom = thumbnailBorderDom?.querySelectorAll(".item");

    if (
      nextDom &&
      prevDom &&
      carouselDom &&
      SliderDom &&
      thumbnailBorderDom &&
      thumbnailItemsDom?.length
    ) {
      thumbnailBorderDom.appendChild(thumbnailItemsDom[0]);

      nextDom.onclick = () => showSlider("next");
      prevDom.onclick = () => showSlider("prev");

      let runTimeOut = 0;

      let runNextAuto = setTimeout(() => {
        nextDom.click();
      }, 9000);

      function showSlider(type: string) {
        const SliderItemsDom = SliderDom?.querySelectorAll(".item");
        const thumbnailItemsDom = thumbnailBorderDom?.querySelectorAll(".item");

        if (!SliderItemsDom?.length || !thumbnailItemsDom?.length) return;

        SliderItemsDom.forEach((item) =>
          item.classList.remove("active", "exiting")
        );

        if (type === "next") {
          // Añadir clase 'exiting' al primer elemento
          SliderItemsDom[0]?.classList.add("exiting");

          // Mover el primer elemento al final después de la animación
          setTimeout(() => {
            SliderDom?.appendChild(SliderItemsDom[0]);
            thumbnailBorderDom?.appendChild(thumbnailItemsDom[0]);

            // Asignar active al nuevo primer elemento
            SliderDom?.querySelector(".item")?.classList.add("active");
          }, 500);
        } else {
          // Añadir clase 'exiting' al último elemento antes de moverlo
          const lastIndex = SliderItemsDom.length - 1;
          SliderItemsDom[lastIndex]?.classList.add("exiting");

          // Mover el último elemento al inicio después de la animación
          setTimeout(() => {
            SliderDom?.prepend(SliderItemsDom[lastIndex]);
            thumbnailBorderDom?.prepend(
              thumbnailItemsDom[thumbnailItemsDom.length - 1]
            );

            // Asegurar que el nuevo primer elemento es visible y tiene la clase active
            const firstItem = SliderDom?.querySelector(".item");
            firstItem?.classList.add("active");

            // Eliminar 'exiting' para evitar que desaparezca
            SliderItemsDom[lastIndex]?.classList.remove("exiting");
          }, 500);
        }

        carouselDom?.classList.add(type);
        clearTimeout(runTimeOut);
        runTimeOut = setTimeout(() => {
          carouselDom?.classList.remove("next", "prev");
        }, 2000);

        clearTimeout(runNextAuto);
        runNextAuto = setTimeout(() => {
          nextDom?.click();
        }, 9000);
      }
    }
  }
</script>
